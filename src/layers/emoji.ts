import { map, toPaste, withMapper } from 'karabiner.ts'
import { system } from '../apps/system'

// See https://gitmoji.dev/
const emojiMap = {
  b: 'üêõ', // Fix a bug
  c: 'üîß', // add or update Configuration files
  d: 'üìù', // add or update Documentation
  f: 'üö©', // add, update, or remove Feature Flags
  h: 'üíØ', // _hundred
  j: 'üòÇ', // _joy
  m: 'üîÄ', // Merge branches
  n: '‚ú®', // introduce New features
  p: 'üëç', // _plus_one +1
  r: '‚ôªÔ∏è', // Refactor code
  s: 'üòÖ', // _sweat_smile
  t: 'ü§î', // _thinking_face
  u: '‚¨ÜÔ∏è', // Upgrade dependencies
  v: 'üîñ', // release / Version tags
}

export const emojiHint = Object.entries(emojiMap)
  .map(([k, v]) => `${v} ${k}`)
  .join('    ')

export const emoji = [
  map(';').to(system.emojiPicker),

  withMapper(emojiMap)((k, v) => map(k).toPaste(v)),

  withMapper({ 4: '‚á•', 5: '‚éã', 6: '‚åò', 7: '‚å•', 8: '‚åÉ', 9: '‚áß', 0: '‚á™' })(
    (k, v) => map(k).toPaste(v),
  ),
  withMapper(['‚Üê', '‚Üí', '‚Üë', '‚Üì', '‚ê£', '‚èé', '‚å´', '‚å¶'])((k) =>
    map(k).toPaste(k),
  ),
  { ',': toPaste('‚Äπ'), '.': toPaste('‚Ä∫') },

  // Code snippets
  map('l').toTypeSequence('console.log()‚Üê'),
  map("'").toTypeSequence('‚å´"'),
  map('[').toTypeSequence('[‚ê£]‚ê£'),
  map(']').toTypeSequence('-‚ê£[‚ê£]‚ê£'),
]
