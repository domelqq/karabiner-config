import {
  duoLayer,
  ifApp,
  ifDevice,
  map,
  NumberKeyValue,
  rule,
  SideModifierAlias,
  ToEvent,
  toKey,
  withCondition,
  withMapper,
  writeToProfile,
} from 'karabiner.ts'

// Devices
export const ifMoonlander = ifDevice({ vendor_id: 12951, product_id: 6505 })
export const ifAppleKeyboard = ifDevice({ vendor_id: 1452, product_id: 835 })

// Apps
export const ifAirmail = ifApp('^it.bloop.airmail2$')
export const ifArc = ifApp('^company.thebrowser.Browser$')
export const ifJetBrainsIde = ifApp('^com.jetbrains.(WebStorm|rider)$')
export const ifSlack = ifApp('^com.tinyspeck.slackmacgap$')
export const ifSourceTree = ifApp('^com.torusknot.SourceTree')

const hjklArrows = { h: '‚Üê', j: '‚Üë', k: '‚Üì', l: '‚Üí' } as const

const tapModifier = (v: SideModifierAlias, to: ToEvent) =>
  map(v).to(v).toIfAlone(to)

writeToProfile('Default', [
  rule('Hyper').manipulators([map('‚á™').toHyper().toIfAlone('‚éã')]),

  //// üè†‚Äπ home row - left side
  duoLayer('f', 'd').manipulators([
    // ‚Üê ‚Üë ‚Üì ‚Üí
    withMapper(hjklArrows)((k, v) => map(k).to(v)),
    map('n').to('‚Üê', '‚å•'),
    map('.').to('‚Üí', '‚å•'),
    map('m').to('‚Üê', '‚åÉ'),
    map(',').to('‚Üí', '‚åÉ'),
  ]),
  duoLayer('f', 's').manipulators([
    // ‚Üê ‚Üë ‚Üì ‚Üí + ‚áß
    withMapper(hjklArrows)((k, v) => map(k).to(v, '‚áß')),
    map('n').to('‚Üê', '‚å•‚áß'),
    map('.').to('‚Üí', '‚å•‚áß'),
    map('m').to('‚Üê', '‚åÉ‚áß'),
    map(',').to('‚Üí', '‚åÉ‚áß'),
  ]),
  duoLayer('d', 's').manipulators([
    // delete
    map('h').to('‚å´'),
    map('l').to('‚å¶'),
    map('j').to('‚å´', '‚åò'),
    map('n').to('‚å´', '‚å•'),
    map('.').to('‚å¶', '‚å•'),
    map('m').to('‚å´', '‚åÉ'),
    map(',').to('‚å¶', '‚åÉ'),
  ]),

  //// üè†‚Ä∫ home row - right side
  duoLayer('j', 'k').manipulators([
    // ‚åò + letter
    withMapper([
      ...(['q', 'w', 'e', 'r', 't'] as const),
      ...(['a', 's', 'd', 'f', 'g'] as const),
      ...(['z', 'x', 'c', 'v', 'b'] as const),
    ])((k) => map(k).to(k, '‚åò')),
  ]),

  duoLayer('z', 'x').manipulators([
    map('‚èé').to('‚ê£', '‚åò‚åÉ'),

    // See https://gitmoji.dev/
    withMapper({
      b: 'üë∑', // add or update ci Build system
      c: '‚úÖ', // _check
      d: 'üìù', // add or update Documentation
      f: 'üêõ', // Fix a bug
      h: 'üíØ', // _hundred
      j: 'üòÇ', // _joy
      m: 'üîÄ', // Merge branches
      n: '‚ú®', // introduce New features
      p: 'üëç', // _plus_one +1
      r: '‚ôªÔ∏è', // Refactor code
      s: 'üòÖ', // _sweat_smile
      t: 'üß™', // _test
      u: '‚¨ÜÔ∏è', // Upgrade dependencies
      v: 'üîñ', // release / Version tags
    })((k, v) => map(k).toPaste(v)),

    withMapper(['‚åò', '‚å•', '‚åÉ', '‚áß', '‚á™'])((k, i) =>
      map((i + 1) as NumberKeyValue).toPaste(k),
    ),
    withMapper(['‚åò', '‚å•', '‚åÉ', '‚áß'])((k, i) =>
      map((i + 6) as NumberKeyValue).toPaste(k),
    ),

    //           Paste the symbols instead of triggering the key
    withMapper(['‚Üê', '‚Üí', '‚Üë', '‚Üì', '‚ê£', '‚èé', '‚á•', '‚éã', '‚å´', '‚å¶', '‚á™'])((k) =>
      map(k).toPaste(k),
    ),
    map(',').toPaste('‚Äπ'),
    map('.').toPaste('‚Ä∫'),

    // Code snippets
    map('l').toTypeSequence('console.log()‚Üê'),
    map('`').toTypeSequence('```‚èé‚èé‚Üë'),
  ]),

  duoLayer('l', ';').manipulators([
    // Launch apps
    withMapper({
      a: 'Arc', // Browser
      c: 'Calendar',
      f: 'Finder',
      k: 'Lens', // K8s
      m: 'Airmail', // Mail
      n: 'Notion',
      r: 'Rider',
      s: 'Slack',
      t: 'Warp', // Terminal
      w: 'WebStorm',
      x: 'Xcode',
      z: 'zoom.us',
      ',': 'System Settings',
    })((k, v) => map(k).toApp(v)),
  ]),

  rule('apps and modifiers').manipulators([
    withCondition(ifAirmail)([
      map('‚Äπ‚åò').to('‚Äπ‚åò').toIfAlone('‚Üì', '‚åò‚å•'), // Reveal/Hide Sidebar
      map('‚Ä∫‚å•').to('‚Ä∫‚å•').toIfAlone('‚Üë', '‚å•'), // Goto the first message
    ]),

    withCondition(ifArc)([
      tapModifier('‚Äπ‚åò', toKey('s', '‚åò‚å•')), // Reveal/Hide Sidebar

      tapModifier('‚Äπ‚åò', toKey('s', '‚åò‚å•')), // Reveal/Hide Sidebar
      tapModifier('‚Äπ‚å•', toKey('r', '‚åò')), // Refresh
      tapModifier('‚Äπ‚åÉ', toKey('=', '‚åÉ‚áß')), // Add Split View

      tapModifier('‚Ä∫‚åò', toKey('i', '‚åò‚å•')), // Developer Tools
      tapModifier('‚Ä∫‚å•', toKey('l', '‚åò')), // Open Command Bar
      tapModifier('‚Ä∫‚åÉ', toKey('t', '‚åò')), // New Tab

      map('[', '‚å•').to('‚Üë', '‚åò‚å•'), // Pre Tab
      map(']', '‚å•').to('‚Üì', '‚åò‚å•'), // Next Tab
      map('[', '‚åÉ').to('‚Üê', '‚åò‚å•'), // Pre Space
      map(']', '‚åÉ').to('‚Üí', '‚åò‚å•'), // Next Space
    ]),

    withCondition(ifJetBrainsIde)([
      tapModifier('‚Äπ‚åò', toKey('h', '‚å•')), // Hide all tool windows
      tapModifier('‚Äπ‚å•', toKey('r', '‚å•‚áß')), // Run

      tapModifier('‚Ä∫‚åò', toKey(4, '‚å•')), // Terminal
      tapModifier('‚Ä∫‚å•', toKey(';', '‚åÉ')), // AceJump
    ]),

    withCondition(ifSlack)([
      tapModifier('‚Äπ‚åò', toKey('d', '‚åò‚áß')), // Show/Hide SideBar
      tapModifier('‚Äπ‚å•', toKey('f6')), // Move focus to the next section
      tapModifier('‚Ä∫‚åò', toKey('.', '‚åò')), // Hide right bar
      tapModifier('‚Ä∫‚å•', toKey('k', '‚åò')), // Open
    ]),

    withCondition(ifSourceTree)([
      tapModifier('‚Äπ‚å•', toKey('c', '‚åò‚áß')), // Commit
      tapModifier('‚Äπ‚åÉ', toKey('p', '‚åò‚áß')), // Push
      tapModifier('‚Ä∫‚å•', toKey('f', '‚åò‚áß')), // fetch
      tapModifier('‚Ä∫‚åÉ', toKey('l', '‚åò‚áß')), // pull
    ]),
  ]),

  // system
  rule('Mouse Cursor Position').manipulators([
    map('‚Üê', 'Meh').toMouseCursorPosition({ x: '25%', y: '50%' }),
    map('‚Üí', 'Meh').toMouseCursorPosition({ x: '75%', y: '50%' }),
    map('‚Üì', 'Meh').toMouseCursorPosition({ x: '50%', y: '50%' }),
    map('‚Üë', 'Meh').toMouseCursorPosition({ x: '100%', y: 0 }),
  ]),
])
