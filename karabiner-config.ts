import {
  duoLayer,
  FromKeyParam,
  ifApp,
  ifDevice,
  layer,
  map,
  mapSimultaneous,
  rule,
  to$,
  toApp,
  toKey,
  toMouseCursorPosition,
  toPaste,
  toPointingButton,
  toSleepSystem,
  withCondition,
  withMapper,
  withModifier,
  writeToProfile,
} from 'karabiner.ts'
import {
  duoModifier,
  raycastExt,
  raycastWin,
  tapModifier,
  toClearNotifications,
  toResizeWindow,
} from './utils'

writeToProfile(
  'Default',
  [
    vimLayer(),
    symbolsLayer(),
    digitsAndDelLayer(),
    emojiLayer(),
    launchAppLayer(),
    openLinkLayer(),
    systemLayer(),

    appMappings(),
    raycast(),
    homerow(),

    duoModifiers(),
    appleKeyboard(),
    moonlanderKeyboard(),
  ],
  {
    'basic.simultaneous_threshold_milliseconds': 50,
    'duo_layer.threshold_milliseconds': 100,
    'duo_layer.notification': true,
  },
)

function vimLayer() {
  let hint = `\
‚Üê  ‚Üì  ‚Üë  ‚Üí     ‚å´
H  J    K   L       '`
  return duoLayer('f', ';')
    .notification(hint)
    .manipulators([
      withModifier('??')({
        h: toKey('‚Üê'),
        j: toKey('‚Üì'),
        k: toKey('‚Üë'),
        l: toKey('‚Üí'),

        ';': toKey('‚Ä∫‚áß'),
        d: toKey('‚Äπ‚åò'),
        s: toKey('‚Äπ‚åÉ'),
        a: toKey('‚Äπ‚å•'),
      }),

      { "'": toKey('‚å´'), '\\': toKey('‚å¶') },
    ])
}

function symbolsLayer() {
  let hint = `\
&   !  @ #    ^   {  [   (  $      ?  }  ]   )  %      _   +      ‚å´
N  M  ,   .    H  J  K  L  ;      Y  U  I  O  P       ‚ê£  ‚èé      '`

  let toSymbol = {
    '!': toKey(1, '‚áß'),
    '@': toKey(2, '‚áß'),
    '#': toKey(3, '‚áß'),
    $: toKey(4, '‚áß'),
    '%': toKey(5, '‚áß'),
    '^': toKey(6, '‚áß'),
    '&': toKey(7, '‚áß'),
    '*': toKey(8, '‚áß'),
    '(': toKey(9, '‚áß'),
    ')': toKey(0, '‚áß'),

    '[': toKey('['),
    ']': toKey(']'),
    '{': toKey('[', '‚áß'),
    '}': toKey(']', '‚áß'),

    '-': toKey('-'),
    '=': toKey('='),
    _: toKey('-', '‚áß'),
    '+': toKey('=', '‚áß'),

    ';': toKey(';'),
    '/': toKey('/'),
    ':': toKey(';', '‚áß'),
    '?': toKey('/', '‚áß'),

    ',': toKey(','),
    '.': toKey('.'),
    '<': toKey(',', '‚áß'),
    '>': toKey('.', '‚áß'),
  }

  return duoLayer('s', ';')
    .notification(hint)
    .manipulators([
      withMapper({
        // ! @ # $ % ^ & * ( )    _ +
        // 1 2 3 4 5 6 7 8 9 0    - =

        y: '?',
        u: '}',
        i: ']',
        o: ')', // 0
        p: '%', // 5

        h: '^', // 6
        j: '{',
        k: '[',
        l: '(', // 9
        ';': '$', // 4

        n: '&', // 7
        m: '!', // 1
        ',': '@', // 2
        '.': '#', // 3

        ']': '*', // 8

        '‚ê£': '_',
        '‚èé': '+',
      } as const)((k, v) => map(k).to(toSymbol[v])),

      { "'": toKey('‚å´') },
    ])
}

function digitsAndDelLayer() {
  let hint = `\
0    1  2  3    4  5  6    7  8  9    +  -  /  *    .    ‚å´_‚å•_‚åò  ‚å¶
N   M  ,   .     J  K  L    U  I  O    P  ;   /  ]    [      '   H   Y    \\`
  return duoLayer('d', ';')
    .notification(hint)
    .manipulators([
      // digits keypad_{i}
      withMapper([
        'n', //             // 0
        ...['m', ',', '.'], // 1 2 3
        ...['j', 'k', 'l'], // 4 5 6
        ...['u', 'i', 'o'], // 7 8 9
      ] as const)((k, i) => map(k).to(`keypad_${i as 0}`)),

      // + - / * .
      {
        p: toKey('=', '‚áß'), // +
        ';': toKey('-'), // // -
        // / stay           // /
        ']': toKey(8, '‚áß'), // *

        '[': toKey('keypad_period'),
      },

      // delete ‚å´ ‚å¶
      {
        '\\': toKey('‚å¶'),

        "'": toKey('‚å´'),
        h: toKey('‚å´', '‚å•'),
        y: toKey('‚å´', '‚åò'),
      },

      // F1 - F9
      withMapper([1, 2, 3, 4, 5, 6, 7, 8, 9])((k) => map(k).to(`f${k}`)),
    ])
}

function emojiLayer() {
  // See https://gitmoji.dev/
  let emojiMap = {
    b: 'üêõ', // Fix a bug
    c: 'üîß', // add or update Configuration files
    d: 'üìù', // add or update Documentation
    f: 'üö©', // add, update, or remove Feature Flags
    h: 'üíØ', // _hundred
    j: 'üòÇ', // _joy
    m: 'üîÄ', // Merge branches
    n: '‚ú®', // introduce New features
    p: 'üëç', // _plus_one +1
    r: '‚ôªÔ∏è', // Refactor code
    s: 'üòÖ', // _sweat_smile
    t: 'ü§î', // _thinking_face
    u: '‚¨ÜÔ∏è', // Upgrade dependencies
    v: 'üîñ', // release / Version tags

    k: 'üõ†Ô∏è', // Tools
    o: 'üí≠', // Opinions and thoughts
    i: 'üë®‚Äçüíª', // Experiences and stories
  }

  let emojiHint = Object.entries(emojiMap)
    .reduce(
      (r, [k, v]) => [r[0].concat(v), r[1].concat(k.toUpperCase())],
      [[] as string[], [] as string[]],
    )
    .map((v, i) => v.join(i === 0 ? ' ' : '    '))
    .join('\n')

  return duoLayer('z', 'x')
    .notification(emojiHint)
    .manipulators([
      map(';').to(toKey('‚ê£', '‚åò‚åÉ')), // emojiPicker

      withMapper(emojiMap)((k, v) => map(k).toPaste(v)),

      { 2: toPaste('‚å´'), 3: toPaste('‚å¶'), 4: toPaste('‚á•'), 5: toPaste('‚éã') },
      { 6: toPaste('‚åò'), 7: toPaste('‚å•'), 8: toPaste('‚åÉ'), 9: toPaste('‚áß') },
      { 0: toPaste('‚á™'), ',': toPaste('‚Äπ'), '.': toPaste('‚Ä∫') },

      withMapper(['‚Üê', '‚Üí', '‚Üë', '‚Üì', '‚ê£', '‚èé', '‚å´', '‚å¶'])((k) =>
        map(k).toPaste(k),
      ),

      // Code snippets
      map('l').toTypeSequence('console.log()‚Üê'),
      map("'").toTypeSequence('‚å´"'),
      map('[').toTypeSequence('[‚ê£]‚ê£'),
      map(']').toTypeSequence('-‚ê£[‚ê£]‚ê£'),

      { "'": toKey('‚å´'), '\\': toKey('‚å¶') },
    ])
}

function launchAppLayer() {
  return duoLayer('l', ';')
    .notification('Launch App üöÄ üì±')
    .manipulators({
      b: toApp('Safari'), // Browser
      c: toApp('Calendar'),
      d: toApp('Eudb_en'), // Dictionary
      e: toApp('Zed'), // Editor
      f: toApp('Finder'),
      g: toApp('Google Chrome'),
      i: toApp('WeChat'), // IM
      m: toApp('Spark Desktop'), // Mail
      s: toApp('Slack'),
      w: to$(`open ~/Applications/WebStorm.app`),
      z: toApp('zoom.us'),

      ',': toApp('System Settings'),
    })
}

function openLinkLayer() {
  let links = require('./links.json') as Record<FromKeyParam, string>
  return duoLayer('.', '/')
    .notification('Open Link üîó')
    .manipulators([withMapper(links)((k, v) => map(k).to$(`open "${v}"`))])
}

function systemLayer() {
  return layer('`', 'system').manipulators({
    1: toMouseCursorPosition({ x: '25%', y: '50%', screen: 0 }),
    2: toMouseCursorPosition({ x: '50%', y: '50%', screen: 0 }),
    3: toMouseCursorPosition({ x: '75%', y: '50%', screen: 0 }),
    4: toMouseCursorPosition({ x: '99%', y: 20, screen: 0 }),

    5: toMouseCursorPosition({ x: '50%', y: '50%', screen: 1 }),

    '‚èé': toPointingButton('button1'),

    n: toClearNotifications,

    '‚ê£': toSleepSystem(),

    j: toKey('‚á•', '‚åò'),
    k: toKey('‚á•', '‚åò‚áß'),
  })
}

function appMappings() {
  let historyNavi = [
    // Back/Forward history in most apps
    map('h', '‚åÉ').to('[', '‚åò'),
    map('l', '‚åÉ').to(']', '‚åò'),
  ]
  let tabNavi = [
    // Pre/Next tab in most apps
    map('h', '‚å•').to('[', '‚åò‚áß'),
    map('l', '‚å•').to(']', '‚åò‚áß'),
  ]
  let switcher = [
    // Pre/Next switcher in most apps
    map('h', '‚åò‚å•‚åÉ').to('‚á•', '‚åÉ‚áß'),
    map('l', '‚åò‚å•‚åÉ').to('‚á•', '‚åÉ'),
  ]

  return rule('app mappings').manipulators([
    //region Chrome
    withCondition(ifApp('^com.google.Chrome$'))([
      ...historyNavi,
      ...tabNavi,
      ...switcher,

      tapModifier('‚Äπ‚å•', toKey('r', '‚åò')), // refreshThePage

      tapModifier('‚Ä∫‚åò', toKey('i', '‚åò‚å•')), // developerTools
      tapModifier('‚Ä∫‚å•', toKey('a', '‚åò‚áß')), // searchTabs

      map(1, 'Meh').to(toResizeWindow('Google Chrome')),
    ]),
    //endregion

    //region Safari
    withCondition(ifApp('^com.apple.Safari$'))([
      ...historyNavi,
      ...tabNavi,
      ...switcher,

      tapModifier('‚Äπ‚åò', toKey('l', '‚åò‚áß')), // showHideSideBar
      tapModifier('‚Äπ‚å•', toKey('r', '‚åò')), // reloadPage

      tapModifier('‚Ä∫‚åò', toKey('i', '‚åò‚å•')), // showWebInspector

      map(1, 'Meh').to(toResizeWindow('Safari')),
    ]),
    //endregion

    //region JetBrains IDE
    withCondition(ifApp('^com.jetbrains.[\\w-]+$'))([
      ...historyNavi,
      ...tabNavi,
      ...switcher,

      tapModifier('‚Äπ‚åò', toKey('‚éã', '‚åò‚áß')), // hideAllToolWindows
      tapModifier('‚Äπ‚å•', toKey('r', '‚å•‚áß')), // run

      tapModifier('‚Ä∫‚åò', toKey(4, '‚å•')), // toolWindows_terminal
      tapModifier('‚Ä∫‚å•', toKey('a', '‚åò‚áß')), // findAction
    ]),
    //endregion

    //region Zed
    withCondition(ifApp('^dev.zed.Zed$'))([
      ...historyNavi,
      ...tabNavi,
      ...switcher,

      tapModifier('‚Äπ‚åò', toKey('y', '‚åò‚å•')), // closeAllDocks
      tapModifier('‚Äπ‚å•', toKey('t', '‚å•')), // taskRerun

      tapModifier('‚Ä∫‚åò', toKey('`', '‚åÉ')), // terminal
      tapModifier('‚Ä∫‚å•', toKey('p', '‚åò')), // fileFinder

      map(1, 'Meh').to(toResizeWindow('Zed')),
    ]),
    //endregion

    //region Slack
    withCondition(ifApp('^com.tinyspeck.slackmacgap$'))([
      ...historyNavi,

      tapModifier('‚Äπ‚åò', toKey('d', '‚åò‚áß')), // showHideSideBar
      tapModifier('‚Äπ‚å•', toKey('f6')), // moveFocusToTheNextSection

      tapModifier('‚Ä∫‚åò', toKey('.', '‚åò')), // hideRightBar
      tapModifier('‚Ä∫‚å•', toKey('k', '‚åò')), // open

      map(1, 'Meh').to(
        // After the 1/4 width, leave some space for opening thread in a new window
        // before the last 1/4 width
        toResizeWindow('Slack', { x: 1263, y: 25 }, { w: 1760, h: 1415 }),
      ),
    ]),
    //endregion

    //region Spark
    withCondition(ifApp('^com.readdle.SparkDesktop'))([
      tapModifier('‚Äπ‚åò', toKey('/')), // openSidebar
      tapModifier('‚Äπ‚å•', toKey('r', '‚åò')), // fetch

      tapModifier('‚Ä∫‚åò', toKey('/', '‚åò')), // changeLayout
      tapModifier('‚Ä∫‚å•', toKey('k', '‚åò')), // actions

      map(1, 'Meh').to(toResizeWindow('Spark Desktop')),
    ]),
    //endregion

    //region Zoom
    withCondition(ifApp('^us.zoom.xos$'))([
      tapModifier('‚Äπ‚åò', toKey('a', '‚åò‚áß')), // muteUnmuteMyAudio
      tapModifier('‚Äπ‚å•', toKey('s', '‚åò‚áß')), // startStopScreenSharing

      tapModifier('‚Ä∫‚åò', toKey('v', '‚åò‚áß')), // startStopVideo
      tapModifier('‚Ä∫‚å•', toKey('h', '‚åò‚áß')), // showHideChatPanel
    ]),
    //endregion
  ])
}

function raycast() {
  return rule('Raycast').manipulators([
    map('‚ê£', '‚å•').to(raycastExt('evan-liu/quick-open/index')),

    withModifier('Hyper')({
      c: raycastExt('raycast/calendar/my-schedule'),
      d: raycastExt('isfeng/easydict/easydict'),
      e: raycastExt('raycast/emoji-symbols/search-emoji-symbols'),
      f: raycastExt('ratoru/google-maps-search/find'),
      g: raycastExt('ricoberger/gitmoji/gitmoji'),
      m: raycastExt('raycast/navigation/search-menu-items'),
      n: raycastExt('raycast/github/notifications'),
      s: raycastExt('raycast/snippets/search-snippets'),
      v: raycastExt('raycast/clipboard-history/clipboard-history'),
      w: raycastExt('raycast/navigation/switch-windows'),
    }),
    withModifier('Hyper')({
      '‚Üë': raycastWin('previous-isplay'),
      '‚Üì': raycastWin('next-display'),
      '‚Üê': raycastWin('previous-desktop'),
      '‚Üí': raycastWin('next-desktop'),
    }),
    withModifier('Hyper')({
      1: raycastWin('first-third'),
      2: raycastWin('center-third'),
      3: raycastWin('last-third'),
      4: raycastWin('first-two-thirds'),
      5: raycastWin('last-two-thirds'),
      9: raycastWin('left-half'),
      0: raycastWin('right-half'),
    }),
    withModifier('Meh')({
      1: raycastWin('first-fourth'),
      2: raycastWin('second-fourth'),
      3: raycastWin('third-fourth'),
      4: raycastWin('last-fourth'),
      5: raycastWin('center'),
      6: raycastWin('center-half'),
      7: raycastWin('center-two-thirds'),
      8: raycastWin('maximize'),
    }),
  ])
}

function homerow() {
  return rule('Homerow').manipulators([
    mapSimultaneous(['f', 'j']).to('‚ê£', 'Hyper'), // Click
    mapSimultaneous(['f', 'k']).to('‚èé', 'Hyper'), // Scroll
  ])
}

function duoModifiers() {
  return rule('duo-modifiers').manipulators([
    duoModifier('fd', '‚åò'),
    duoModifier('fs', '‚åÉ'),
    duoModifier('fa', '‚å•'),

    duoModifier('ds', '‚áß'),

    duoModifier('gd', '‚åò‚áß'),
    duoModifier('gs', '‚åÉ‚áß'),
    duoModifier('ga', '‚å•‚áß'),

    duoModifier('vc', '‚åò‚å•'),
    duoModifier('vx', '‚åò‚åÉ'),
    duoModifier('cx', '‚å•‚åÉ'),

    duoModifier('vz', '‚åò‚å•‚åÉ'),

    duoModifier('jk', '‚åò'),
    duoModifier('jl', '‚åÉ'),
    duoModifier('j;', '‚å•'),

    duoModifier('kl', '‚áß'),

    duoModifier('hk', '‚åò‚áß'),
    duoModifier('hl', '‚åÉ‚áß'),
    duoModifier('h;', '‚å•‚áß'),

    duoModifier('m,', '‚åò‚å•'),
    duoModifier('m.', '‚åò‚åÉ'),
    duoModifier(',.', '‚å•‚åÉ'),

    duoModifier('m/', '‚åò‚å•‚åÉ'),
  ])
}

function appleKeyboard() {
  let ifAppleKeyboard = ifDevice({ vendor_id: 1452, product_id: 835 })
  return rule('Apple Keyboard', ifAppleKeyboard).manipulators([
    map('‚á™').to('‚éã'),
    map('‚á™', '‚áß').to('‚á™'),

    map('‚Ä∫‚åò', '‚å•').toHyper(),
    map('‚Ä∫‚å•', '‚áß').toMeh(),

    tapModifier('fn', toKey('‚ê£', '‚åò‚áß')), // selectNextSourceInInputMenu
  ])
}

function moonlanderKeyboard() {
  let ifMoonlander = ifDevice({ vendor_id: 12951, product_id: 6505 })
  return rule('Moonlander', ifMoonlander).manipulators([
    map('‚éã', '‚áß').to('‚á™'),
    map('‚éã', '‚á™').to('‚á™'),

    tapModifier('‚Äπ‚åÉ', toKey('‚ê£', '‚åò‚áß')), // selectNextSourceInInputMenu
  ])
}
